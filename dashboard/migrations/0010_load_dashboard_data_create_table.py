# Generated by Django 4.2.13 on 2024-09-02 06:14

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0009_chartmeta'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP TABLE IF EXISTS dashboard_load_data;
                CREATE TABLE dashboard_load_data(
                    id SERIAL PRIMARY KEY,
                    report_month INTEGER NULL,
                    report_year INTEGER NULL, 
                    district_name varchar NULL,
                    district_id INTEGER NULL,
                    boundary_district_id INTEGER NULL,
                    partner_id INTEGER NULL,
                    partner_mission_id INTEGER NULL,
                    project_id INTEGER NULL,
                    project_name varchar NULL,
                    financial_year varchar NULL,
                    quarterly_year varchar NULL,
                    children_screened INTEGER DEFAULT 0,
                    schools_covered INTEGER DEFAULT 0,
                    teachers_trained INTEGER DEFAULT 0,
                    children_prescribed_spectacles INTEGER DEFAULT 0,
                    children_provided_spectacles INTEGER DEFAULT 0,
                    children_advised_same_glasses INTEGER DEFAULT 0,
                    children_referred_hospital INTEGER DEFAULT 0,
                    children_provided_spectacles_hospital INTEGER DEFAULT 0,
                    children_advised_surgery INTEGER DEFAULT 0,
                    children_provided_surgery INTEGER DEFAULT 0,
                    spectacle_compliance_3_months INTEGER DEFAULT 0
                )


            """
        ),
        migrations.RunSQL(
            """
                CREATE OR REPLACE FUNCTION dashboard_load_data(param_reporting_year integer, param_reporting_month integer)
                RETURNS VOID
                LANGUAGE plpgsql
                AS $function$
                DECLARE 
                    lcl_sql_query varchar := '';
                    lcl_first_of_reporting_month date;
                    lcl_previous_reporting_month_date date;
                    lcl_previous_reporting_month varchar := '';
                    lcl_previous_reporting_year varchar := '';
                    lcl_first_of_next_month date;
                    lcl_financial_year varchar;
                    lcl_quarter varchar;
                BEGIN

                raise log 'dashboard_load_data_temp - Start :%', clock_timestamp();
                raise notice 'dashboard_load_data_temp - Start :%', clock_timestamp();


                select to_date(param_reporting_year || '-' || param_reporting_month || '-01','YYYY-MM-DD') into lcl_first_of_reporting_month;
                select lcl_first_of_reporting_month + interval '1 month' into lcl_first_of_next_month;
                select lcl_first_of_reporting_month - interval '1 month' into lcl_previous_reporting_month_date;
                SELECT EXTRACT(YEAR FROM lcl_previous_reporting_month_date) INTO lcl_previous_reporting_year;
                SELECT EXTRACT(MONTH FROM lcl_previous_reporting_month_date) INTO lcl_previous_reporting_month;

                    IF param_reporting_month >= 7  THEN
                        lcl_financial_year := param_reporting_year || '-' || (param_reporting_year + 1);
                    ELSE
                        lcl_financial_year := (param_reporting_year - 1) || '-' || param_reporting_year;
                    END IF;
                    
                    -- Determine the quarter
                    CASE
                        WHEN param_reporting_month IN (7, 8, 9) THEN
                            lcl_quarter := 'Q1';
                        WHEN param_reporting_month IN (10, 11, 12) THEN
                            lcl_quarter := 'Q2';
                        WHEN param_reporting_month IN (1, 2, 3) THEN
                            lcl_quarter := 'Q3';
                        WHEN param_reporting_month IN (4,5,6) THEN
                            lcl_quarter := 'Q4';
                    END CASE;

                    RAISE NOTICE 'param_reporting_month: %', param_reporting_month;
                    RAISE NOTICE 'Financial Year: %', lcl_financial_year;
                    RAISE NOTICE 'Quarter: %', lcl_quarter;


                DROP TABLE IF EXISTS dashboard_load_data_temp;
                CREATE TABLE dashboard_load_data_temp(
                    id SERIAL PRIMARY KEY,
                    report_month INTEGER NULL,
                    report_year INTEGER NULL, 
                    district_name varchar NULL,
                    district_id INTEGER NULL,
                    boundary_district_id INTEGER NULL,
                    partner_id INTEGER NULL,
                    partner_mission_id INTEGER NULL,
                    project_id INTEGER NULL,
                    project_name varchar NULL,
                    financial_year varchar NULL,
                    quarterly_year varchar NULL,
                    children_screened INTEGER DEFAULT 0,
                    schools_covered INTEGER DEFAULT 0,
                    teachers_trained INTEGER DEFAULT 0,
                    children_prescribed_spectacles INTEGER DEFAULT 0,
                    children_provided_spectacles INTEGER DEFAULT 0,
                    children_advised_same_glasses INTEGER DEFAULT 0,
                    children_referred_hospital INTEGER DEFAULT 0,
                    children_provided_spectacles_hospital INTEGER DEFAULT 0,
                    children_advised_surgery INTEGER DEFAULT 0,
                    children_provided_surgery INTEGER DEFAULT 0,
                    spectacle_compliance_3_months INTEGER DEFAULT 0
                );

                RAISE NOTICE 'Table Created - dashboard_load_data_temp ....% -------%---------%',CLOCK_TIMESTAMP(),lcl_first_of_reporting_month,lcl_first_of_next_month;

                INSERT INTO dashboard_load_data_temp(district_id,report_year,report_month,financial_year,quarterly_year)
                select distinct(district_id),param_reporting_year,param_reporting_month,lcl_financial_year,lcl_quarter  from application_master_project 
                where active = 2;

                -- INSERT INTO dashboard_load_data_temp(project_id,project_name,partner_mission_id,district_id,report_year,report_month,financial_year,quarterly_year)
                -- select id,name,partner_mission_mapping_id,district_id,lcl_previous_reporting_year::int,lcl_previous_reporting_month::int,lcl_financial_year,lcl_quarter from application_master_project 
                -- where active = 2;


                update dashboard_load_data_temp x1
                set partner_mission_id = x2.partner_mission_mapping_id
                from application_master_project x2
                where x2.district_id = x1.district_id;



                update dashboard_load_data_temp x1
                set partner_id = x2.partner_id
                from application_master_partnermissionmapping x2
                where x2.id = x1.partner_mission_id;

                -----Update boundary id 

                update dashboard_load_data_temp x2
                set boundary_district_id = x1.id
                from application_master_boundary x1
                where x1.code::int = x2.district_id;

                -----update children_screened -----

                update dashboard_load_data_temp x2
                set children_screened = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_3_0_temp 
                    where 1=1 
                    and "response.407" >= lcl_first_of_reporting_month 
                    and "response.407" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                update dashboard_load_data_temp x2
                set children_screened = coalesce(children_screened,0) + x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_4_0_temp 
                    where 1=1 
                    and "response.405" >= lcl_first_of_reporting_month 
                    and "response.405" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                -----schools_covered ---------

                update dashboard_load_data_temp x2
                set schools_covered = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct(creation_key)) as cnt
                    from export_csv_1_0_temp 
                    where 1=1 
                    and to_date(to_char(submission_date,'YYYY-MM-DD'),'YYYY-MM-DD') >= lcl_first_of_reporting_month 
                    and to_date(to_char(submission_date,'YYYY-MM-DD'),'YYYY-MM-DD') < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;


                -------teachers_trained (yes/no)

                update dashboard_load_data_temp x2
                set teachers_trained = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(*) as cnt
                    from export_csv_10_0_temp where 1=1 
                    and lower(trim("response.393")) = 'yes'
                    and "response.404" >= lcl_first_of_reporting_month 
                    and "response.404" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;


                ----- children_prescribed_spectacles

                update dashboard_load_data_temp x2
                set children_prescribed_spectacles = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_4_0_temp where 1=1 
                    and lower(trim("response.282")) = 'yes'
                    and "response.405" >= lcl_first_of_reporting_month 
                    and "response.405" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                ---children_provided_spectacles----


                update dashboard_load_data_temp x2
                set children_provided_spectacles = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_8_0_temp where 1=1 
                    and "response.355" >= lcl_first_of_reporting_month 
                    and "response.355" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                ---- children_advised_same_glasses -------------

                update dashboard_load_data_temp x2
                set children_advised_same_glasses = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_4_0_temp where 1=1 
                    and lower(trim("response.281")) = 'yes'
                    and "response.405" >= lcl_first_of_reporting_month 
                    and "response.405" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                ---- children_referred_hospital---

                update dashboard_load_data_temp x2
                set children_referred_hospital = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_4_0_temp where 1=1 
                    and lower(trim("response.284")) = 'yes'
                    and "response.405" >= lcl_first_of_reporting_month 
                    and "response.405" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                -----children_provided_spectacles_hospital

                update dashboard_load_data_temp x2
                set children_provided_spectacles_hospital = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_4_0_temp where 1=1 
                    and lower(trim("response.283")) = 'hospital'
                    and "response.405" >= lcl_first_of_reporting_month 
                    and "response.405" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                --------children_advised_surgery

                update dashboard_load_data_temp x2
                set children_advised_surgery = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_5_0_temp where 1=1 
                    and "response.343" like '%Surgery%'
                    and "response.410" >= lcl_first_of_reporting_month 
                    and "response.410" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;

                ------ children_provided_surgery

                update dashboard_load_data_temp x2
                set children_provided_surgery = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_6_0_temp where 1=1 
                    and lower(trim("response.345")) = 'yes'
                    and "response.403" >= lcl_first_of_reporting_month 
                    and "response.403" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;


                -----spectacle_compliance_3_months

                update dashboard_load_data_temp x2
                set spectacle_compliance_3_months = x1.cnt
                from(
                    select "address.2__id__" as district_id,count(distinct("cluster.BeneficiaryResponse")) as cnt
                    from export_csv_8_0_temp where 1=1 
                    and lower(trim("response.356")) in ('yes','occasionally')
                    and "response.408" >= lcl_first_of_reporting_month 
                    and "response.408" < lcl_first_of_next_month
                    group by "address.2__id__"
                ) as x1
                where x1.district_id = x2.boundary_district_id;


                delete from dashboard_load_data where report_month = param_reporting_month and report_year = param_reporting_year;


                INSERT INTO dashboard_load_data (report_month,report_year,district_name,district_id,boundary_district_id,project_id,project_name,partner_mission_id,partner_id,financial_year,quarterly_year,children_screened,schools_covered,teachers_trained,children_prescribed_spectacles,children_provided_spectacles,children_advised_same_glasses,children_referred_hospital,children_provided_spectacles_hospital,children_advised_surgery,children_provided_surgery,spectacle_compliance_3_months)
                select report_month,report_year,district_name,district_id,boundary_district_id,project_id,project_name,partner_mission_id,partner_id,financial_year,quarterly_year,children_screened,schools_covered,teachers_trained,children_prescribed_spectacles,children_provided_spectacles,children_advised_same_glasses,children_referred_hospital,children_provided_spectacles_hospital,children_advised_surgery,children_provided_surgery,spectacle_compliance_3_months from dashboard_load_data_temp;

                END;
                $function$;

            """
        )
    ]
