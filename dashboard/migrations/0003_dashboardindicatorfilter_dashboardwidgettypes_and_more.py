# Generated by Django 4.2.13 on 2024-07-01 06:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0002_auto_20221013_0959'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardIndicatorFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveIntegerField(choices=[(2, 'Active'), (0, 'Inactive')], default=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing_order', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('slug', models.SlugField(blank=True, max_length=60, null=True, verbose_name='Slug')),
                ('chart_type', models.CharField(blank=True, choices=[('SW', 'State wise'), ('TS', 'Time series')], max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardWidgetTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveIntegerField(choices=[(2, 'Active'), (0, 'Inactive')], default=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing_order', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=15, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardChartWidgets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveIntegerField(choices=[(2, 'Active'), (0, 'Inactive')], default=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing_order', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=100)),
                ('stats_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Statistics title')),
                ('label', models.CharField(max_length=500)),
                ('widgetquery', models.TextField()),
                ('survey_id', models.PositiveIntegerField(default=0)),
                ('chart_type', models.CharField(blank=True, choices=[('NC', 'Normal Chart'), ('CC', 'Comparative Charts'), ('SW', 'State wise'), ('TS', 'Time series')], default='NC', max_length=100, null=True)),
                ('chart_size', models.CharField(blank=True, max_length=25, null=True)),
                ('chart_header', models.CharField(blank=True, max_length=250, null=True)),
                ('haxis_title', models.CharField(blank=True, max_length=100, null=True)),
                ('vaxis_title', models.CharField(blank=True, max_length=100, null=True)),
                ('query_type', models.CharField(blank=True, choices=[('ORM', 'ORM'), ('SQL', 'SQL'), ('SQL_P', 'SQL with Params')], default='ORM', max_length=100, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=60, null=True, verbose_name='Slug')),
                ('slug_choice', models.CharField(blank=True, choices=[('R', 'Report'), ('D', 'Dashboard')], max_length=100, null=True)),
                ('config', models.JSONField(blank=True, default=dict, null=True)),
                ('indicator', models.ManyToManyField(blank=True, to='dashboard.dashboardindicatorfilter')),
                ('widgetypes', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.dashboardwidgettypes')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
