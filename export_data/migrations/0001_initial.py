# Generated by Django 3.2.4 on 2021-08-25 05:53

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

operations = [
    migrations.RunSQL('drop function if exists replace_ids_with_text(integer,integer, character varying,boolean, integer, integer)'),
    migrations.RunSQL("""CREATE FUNCTION public.replace_ids_with_text(param_survey_id integer, param_in_type_qid integer, param_table_name character varying, param_partner_exists boolean, param_survey_type integer, param_ben_type integer) RETURNS void
                            LANGUAGE plpgsql
                            AS $_$
                        DECLARE 
                            lcl_sql_query varchar := '';
                            lcl_loop_row RECORD;
                            lcl_key_where varchar := '';
                            lcl_group_cols varchar := '';
                            lcl_boundary_level_names varchar[];
                            lcl_boundarylevel_count integer := 0;
                            lcl_max_boundary_level_code integer := 0;
                            lcl_set_boundary_id_str varchar := '';
                            lcl_loop_set_boundary_id_str varchar := '';
                        BEGIN 
                            -- select format(' %s.sl_no = x1.sl_no ', param_table_name) into lcl_key_where;
                            if param_in_type_qid = 0 then
                            select format('select concat(''response.'', a.id, case when gd_rows.id is null then '''' else ''.'' || gd_rows.id::text || ''.'' end, 
                                            case when gd_cols.id is null then '''' else gd_cols.id::text end) as q_id, a.qtype 
                                from survey_question a
                                inner join survey_block b on a.block_id = b.id and b.survey_id = %s
                                left outer join (select x1.id, x1.parent_id 
                                            from survey_question x1
                                            inner join survey_block x2 on x1.block_id = x2.id and x2.survey_id = %s
                                            where parent_id is not null
                                            and is_grid = false  order by x2.block_order, x1.question_order
                                ) as gd_rows on gd_rows.parent_id = a.id
                                left outer join (
                                            select x1.id, x1.parent_id 
                                            from survey_question x1
                                            inner join survey_block x2 on x1.block_id = x2.id and x2.survey_id = %s
                                            where parent_id is not null
                                            and is_grid = true order by x2.block_order, x1.question_order
                                )  as gd_cols on gd_rows.parent_id = gd_cols.parent_id 
                                where qtype in (''R'',''S'',''C'') 
                                and a.active != 0
                                and a.parent_id is null',param_survey_id, param_survey_id, param_survey_id) into lcl_sql_query;
                            select format(' %s.id = x1.id ', param_table_name) into lcl_key_where;
                            else 
                            select format('select concat(''row_data.'', a.id) as q_id, a.qtype
                                from survey_question a
                                inner join survey_block b on a.block_id = b.id and b.survey_id = %s
                                where qtype in (''R'',''S'',''C'')
                                and a.active != 0
                                and (a.id = %s or a.parent_id = %s )', param_survey_id, param_in_type_qid, param_in_type_qid) into lcl_sql_query;
                            select format(' %s.response_id = x1.response_id and %s.row_id = x1.row_id ', param_table_name, param_table_name) into lcl_key_where;
                            end if;

                            -- RAISE NOTICE '--------1';
                            for lcl_loop_row IN EXECUTE lcl_sql_query
                            LOOP 
                            -- RAISE NOTICE '--------1--%-%',lcl_loop_row.q_id,lcl_loop_row.qtype;
                            if lcl_loop_row.qtype in ('R','S') then
                                EXECUTE format( 'update %s
                                set "%s" = x2.text 
                                from %s as x1
                                inner join survey_choice x2 on x1."%s" = x2.id::text
                                where %s ', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id ,lcl_key_where);
                            elsif lcl_loop_row.qtype in ('C') and param_in_type_qid = 0 then
                            -- handle for checkbox type   
                                EXECUTE format( 'update %s
                                set "%s" = x2.choice_text
                                from %s as x1
                                inner join (select a.id, coalesce(array_to_json(array_agg(b.text)),''[]''::json) as choice_text
                                        from (select id, json_array_elements(replace("%s",''"'','''')::json) as choice_id
                                            from %s 
                                        ) as a 
                                        inner join survey_choice b on b.id = (a.choice_id::text)::int
                                        group by a.id
                                ) as x2 on x2.id = x1.id
                                where %s ', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id , param_table_name, lcl_key_where);
                            elsif lcl_loop_row.qtype in ('C') and param_in_type_qid != 0 then
                            -- handle for checkbox type   
                            EXECUTE format( 'update %s
                                set "%s" = x2.choice_text
                                from %s as x1
                                inner join (select a.response_id, a.row_id, coalesce(array_to_json(array_agg(b.text)),''[]''::json) as choice_text
                                        from (select response_id, row_id, json_array_elements(replace("%s",''"'','''')::json) as choice_id
                                            from %s 
                                        ) as a 
                                        inner join survey_choice b on b.id = (a.choice_id::text)::int
                                        group by a.response_id, a.row_id
                                ) as x2 on x2.response_id = x1.response_id and x2.row_id = x1.row_id
                                where %s ', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id , param_table_name, lcl_key_where);
                            end if;
                            end LOOP;

                        --update user_id - user_id column is required only in the main excel sheet and not the intype questions sheets 
                        -- q_id will be 0 for the main sheet
                        if param_in_type_qid = 0 then
                            -- RAISE NOTICE '--------2';
                            EXECUTE format( 'update %s
                                    set user_id_ref_name = x2.username 
                                    from %s as x1
                                    inner join auth_user x2 on x1.user_id::bigint = x2.id
                                    where %s ', param_table_name, param_table_name, lcl_key_where);
                        end if;

                        if param_survey_id = 73 then
                            -- beneficiary People - survey_id = 73
                            -- Include the reference data of the household - AI questions 640 in the People survey
                            -- RAISE NOTICE '--------2a';
                            EXECUTE format( 'update %s
                            set "ai_question.616" = coalesce(x6.response->>''616''::text,''''),
                                "ai_question.1219" = coalesce(x6.response->>''1219''::text,''''),
                                "ai_question.1220" = coalesce(x6.response->>''1220''::text,''''),
                                "ai_question.1237" = coalesce(x6.response->>''1237''::text,''''),
                                "ai_question.1238" = coalesce(x6.response->>''1238''::text,''''),
                                "ai_question.1239" = coalesce(x6.response->>''1239''::text,''''),
                                "ai_question.626" = coalesce(sc626.text,''''),
                                "ai_question.633.1" = coalesce(x6.response->''address''->''1''->''633''->>''1''::text,''''),
                                "ai_question.633.2" = coalesce(x6.response->''address''->''1''->''633''->>''2''::text,''''),
                                "ai_question.633.3" = coalesce(x6.response->''address''->''1''->''633''->>''3''::text,''''),
                                "ai_question.633.4" = coalesce(x6.response->''address''->''1''->''633''->>''4''::text,''''),
                                "ai_question.633.5" = coalesce(x6.response->''address''->''1''->''633''->>''5''::text,''''),
                                "ai_question.633.6" = coalesce(x6.response->''address''->''1''->''633''->>''6''::text,''''),
                                "ai_question.633.7" = coalesce(x6.response->''address''->''1''->''633''->>''7''::text,''''),
                                "ai_question.633.8" = coalesce(x6.response->''address''->''1''->''633''->>''8''::text,''''),
                                "ai_question.633.1__id__" = (case when x6.response->''address''->''1''->''633''->>''1''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''1''::text)::integer else 0 end),
                                "ai_question.633.2__id__" = (case when x6.response->''address''->''1''->''633''->>''2''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''2''::text)::integer else 0 end),
                                "ai_question.633.3__id__" = (case when x6.response->''address''->''1''->''633''->>''3''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''3''::text)::integer else 0 end),
                                "ai_question.633.4__id__" = (case when x6.response->''address''->''1''->''633''->>''4''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''4''::text)::integer else 0 end),
                                "ai_question.633.5__id__" = (case when x6.response->''address''->''1''->''633''->>''5''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''5''::text)::integer else 0 end),
                                "ai_question.633.6__id__" = (case when x6.response->''address''->''1''->''633''->>''6''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''6''::text)::integer else 0 end),
                                "ai_question.633.7__id__" = (case when x6.response->''address''->''1''->''633''->>''7''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''7''::text)::integer else 0 end),
                                "ai_question.633.8__id__" = (case when x6.response->''address''->''1''->''633''->>''8''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''8''::text)::integer else 0 end)
                            from %s as x1
                            left outer join beneficiary_beneficiaryresponse x5 on (x1."response.640")::text ~ ''^[0-9]+$'' and (x1."response.640")::integer = x5.id
                            left outer join survey_jsonanswer x6 on x5.json_answer_id = x6.id
                            left outer join survey_choice sc626 on x6.response->>''626''::text = sc626.id::text
                            where %s ', param_table_name, param_table_name, lcl_key_where);
                            -- update people - Household data (633 of household) address widgets
                            select format('select concat(''ai_question.633.'',code) as q_id
                                    from masterdata_boundarylevel 
                                    order by code', param_survey_id) into lcl_sql_query;
                            for lcl_loop_row IN EXECUTE lcl_sql_query
                            LOOP 
                                -- RAISE NOTICE '--------2a--%',lcl_loop_row.q_id;
                                EXECUTE format( 'update %s
                                    set "%s" = x2.name 
                                    from %s as x1
                                    inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                    where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                            end LOOP;  
                        end if;


                        --update beneficiary_type and beneficiary reference name
                        -- survey_type 0 is beneficiary 1 is extended activity
                        if param_survey_type = 0 then
                            EXECUTE format( 'update %s
                                set "ben.id" = x2.id
                                from %s as x1
                                inner join beneficiary_beneficiaryresponse x2 on x1."creation_key" = x2.creation_key
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                        elsif param_survey_type = 1 and param_ben_type != 0 then 
                            if param_in_type_qid = 0 and param_ben_type = 2 then
                            -- RAISE NOTICE '--------3';
                            -- beneficiary household - survey_id 70
                                EXECUTE format( 'update %s
                                set 
                                    "cluster.beneficiary_type_ref_name" = x3.name,
                                    "ben_type_question.616" = x4.response->>''616''::text,
                                    "ben_type_question.1219" = x4.response->>''1219''::text,
                                    "ben_type_question.1220" = x4.response->>''1220''::text,
                                    "ben_type_question.1237" = x4.response->>''1237''::text,
                                    "ben_type_question.1238" = x4.response->>''1238''::text,
                                    "ben_type_question.1239" = x4.response->>''1239''::text,
                                    "ben_type_question.626" = coalesce(sc626.text,''''),
                                    "ben_type_question.633.1" = x4.response->''address''->''1''->''633''->>''1''::text,
                                    "ben_type_question.633.2" = x4.response->''address''->''1''->''633''->>''2''::text,
                                    "ben_type_question.633.3" = x4.response->''address''->''1''->''633''->>''3''::text,
                                    "ben_type_question.633.4" = x4.response->''address''->''1''->''633''->>''4''::text,
                                    "ben_type_question.633.5" = x4.response->''address''->''1''->''633''->>''5''::text,
                                    "ben_type_question.633.6" = x4.response->''address''->''1''->''633''->>''6''::text,
                                    "ben_type_question.633.7" = x4.response->''address''->''1''->''633''->>''7''::text,
                                    "ben_type_question.633.8" = x4.response->''address''->''1''->''633''->>''8''::text,
                                    "ben_type_question.633.1__id__" = (case when x4.response->''address''->''1''->''633''->>''1''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''1''::text)::integer else 0 end),
                                    "ben_type_question.633.2__id__" = (case when x4.response->''address''->''1''->''633''->>''2''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''2''::text)::integer else 0 end),
                                    "ben_type_question.633.3__id__" = (case when x4.response->''address''->''1''->''633''->>''3''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''3''::text)::integer else 0 end),
                                    "ben_type_question.633.4__id__" = (case when x4.response->''address''->''1''->''633''->>''4''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''4''::text)::integer else 0 end),
                                    "ben_type_question.633.5__id__" = (case when x4.response->''address''->''1''->''633''->>''5''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''5''::text)::integer else 0 end),
                                    "ben_type_question.633.6__id__" = (case when x4.response->''address''->''1''->''633''->>''6''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''6''::text)::integer else 0 end),
                                    "ben_type_question.633.7__id__" = (case when x4.response->''address''->''1''->''633''->>''7''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''7''::text)::integer else 0 end),
                                    "ben_type_question.633.8__id__" = (case when x4.response->''address''->''1''->''633''->>''8''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''633''->>''8''::text)::integer else 0 end)
                                from %s as x1
                                inner join beneficiary_beneficiaryresponse x2 on x1."cluster.BeneficiaryResponse" = x2.creation_key
                                inner join beneficiary_beneficiarytype x3 on x2.beneficiary_type_id = x3.id
                                inner join survey_jsonanswer x4 on x2.json_answer_id = x4.id
                                left outer join survey_choice sc626 on x4.response->>''626''::text = sc626.id::text
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                                -- update household (qid 633) address widgets
                                select format('select concat(''ben_type_question.633.'',code) as q_id
                                        from masterdata_boundarylevel 
                                        order by code', param_survey_id) into lcl_sql_query;
                                for lcl_loop_row IN EXECUTE lcl_sql_query
                                LOOP 
                                    -- RAISE NOTICE '--------3--%',lcl_loop_row.q_id;
                                    EXECUTE format( 'update %s
                                        set "%s" = x2.name 
                                        from %s as x1
                                        inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                        where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                                end LOOP;  
                            elsif param_in_type_qid = 0 and param_ben_type = 3 then
                                -- RAISE NOTICE '--------4';
                            -- beneficiary Group - survey_id = 71
                                EXECUTE format( 'update %s
                                set "cluster.beneficiary_type_ref_name" = x3.name,
                                    "ben_type_question.620" = x4.response->>''620''::text,
                                    "ben_type_question.622" = x622.text,
                                    "ben_type_question.940.1" = x4.response->''address''->''1''->''940''->>''1''::text,
                                    "ben_type_question.940.2" = x4.response->''address''->''1''->''940''->>''2''::text,
                                    "ben_type_question.940.3" = x4.response->''address''->''1''->''940''->>''3''::text,
                                    "ben_type_question.940.4" = x4.response->''address''->''1''->''940''->>''4''::text,
                                    "ben_type_question.940.5" = x4.response->''address''->''1''->''940''->>''5''::text,
                                    "ben_type_question.940.6" = x4.response->''address''->''1''->''940''->>''6''::text,
                                    "ben_type_question.940.7" = x4.response->''address''->''1''->''940''->>''7''::text,
                                    "ben_type_question.940.8" = x4.response->''address''->''1''->''940''->>''8''::text,
                                    "ben_type_question.940.1__id__" = (case when x4.response->''address''->''1''->''940''->>''1''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''1''::text)::integer else 0 end),
                                    "ben_type_question.940.2__id__" = (case when x4.response->''address''->''1''->''940''->>''2''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''2''::text)::integer else 0 end),
                                    "ben_type_question.940.3__id__" = (case when x4.response->''address''->''1''->''940''->>''3''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''3''::text)::integer else 0 end),
                                    "ben_type_question.940.4__id__" = (case when x4.response->''address''->''1''->''940''->>''4''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''4''::text)::integer else 0 end),
                                    "ben_type_question.940.5__id__" = (case when x4.response->''address''->''1''->''940''->>''5''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''5''::text)::integer else 0 end),
                                    "ben_type_question.940.6__id__" = (case when x4.response->''address''->''1''->''940''->>''6''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''6''::text)::integer else 0 end),
                                    "ben_type_question.940.7__id__" = (case when x4.response->''address''->''1''->''940''->>''7''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''7''::text)::integer else 0 end),
                                    "ben_type_question.940.8__id__" = (case when x4.response->''address''->''1''->''940''->>''8''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''940''->>''8''::text)::integer else 0 end)
                                from %s as x1
                                inner join beneficiary_beneficiaryresponse x2 on x1."cluster.BeneficiaryResponse" = x2.creation_key
                                inner join beneficiary_beneficiarytype x3 on x2.beneficiary_type_id = x3.id
                                inner join survey_jsonanswer x4 on x2.json_answer_id = x4.id
                                inner join survey_choice x622 on x622.id::text = x4.response->>''622''::text
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                                -- update group village(qid 940) address widgets
                                select format('select concat(''ben_type_question.940.'',code) as q_id
                                        from masterdata_boundarylevel 
                                        order by code', param_survey_id) into lcl_sql_query;
                                for lcl_loop_row IN EXECUTE lcl_sql_query
                                LOOP 
                                    -- RAISE NOTICE '--------4--%',lcl_loop_row.q_id;
                                    EXECUTE format( 'update %s
                                        set "%s" = x2.name 
                                        from %s as x1
                                        inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                        where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                                end LOOP;  
                            elsif param_in_type_qid = 0 and param_ben_type = 11 then
                                -- RAISE NOTICE '--------5';
                                -- beneficiary People - survey_id = 73
                                -- Also include the reference data of the household - AI questions 640 in the People survey refers to household AW(633)
                                -- Filter for people survey is based on the household address and not the people address question
                                    EXECUTE format( 'update %s
                                set "cluster.beneficiary_type_ref_name" = x3.name,
                                    "ben_type_question.636" = x4.response->>''636''::text,
                                    "ben_type_question.1278.1" = x4.response->''address''->''1''->''1278''->>''1''::text,
                                    "ben_type_question.1278.2" = x4.response->''address''->''1''->''1278''->>''2''::text,
                                    "ben_type_question.1278.3" = x4.response->''address''->''1''->''1278''->>''3''::text,
                                    "ben_type_question.1278.4" = x4.response->''address''->''1''->''1278''->>''4''::text,
                                    "ben_type_question.1278.5" = x4.response->''address''->''1''->''1278''->>''5''::text,
                                    "ben_type_question.1278.6" = x4.response->''address''->''1''->''1278''->>''6''::text,
                                    "ben_type_question.1278.7" = x4.response->''address''->''1''->''1278''->>''7''::text,
                                    "ben_type_question.1278.8" = x4.response->''address''->''1''->''1278''->>''8''::text,
                                    "ben_type_question.616" = coalesce(x6.response->>''616''::text,''''),
                                    "ben_type_question.1219" = coalesce(x6.response->>''1219''::text,''''),
                                    "ben_type_question.1220" = coalesce(x6.response->>''1220''::text,''''),
                                    "ben_type_question.1237" = coalesce(x6.response->>''1237''::text,''''),
                                    "ben_type_question.1238" = coalesce(x6.response->>''1238''::text,''''),
                                    "ben_type_question.1239" = coalesce(x6.response->>''1239''::text,''''),
                                    "ben_type_question.626" = coalesce(sc626.text,''''),
                                    "ben_type_question.633.1" = coalesce(x6.response->''address''->''1''->''633''->>''1''::text,''''),
                                    "ben_type_question.633.2" = coalesce(x6.response->''address''->''1''->''633''->>''2''::text,''''),
                                    "ben_type_question.633.3" = coalesce(x6.response->''address''->''1''->''633''->>''3''::text,''''),
                                    "ben_type_question.633.4" = coalesce(x6.response->''address''->''1''->''633''->>''4''::text,''''),
                                    "ben_type_question.633.5" = coalesce(x6.response->''address''->''1''->''633''->>''5''::text,''''),
                                    "ben_type_question.633.6" = coalesce(x6.response->''address''->''1''->''633''->>''6''::text,''''),
                                    "ben_type_question.633.7" = coalesce(x6.response->''address''->''1''->''633''->>''7''::text,''''),
                                    "ben_type_question.633.8" = coalesce(x6.response->''address''->''1''->''633''->>''8''::text,''''),
                                    "ben_type_question.633.1__id__" = (case when x6.response->''address''->''1''->''633''->>''1''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''1''::text)::integer else 0 end),
                                    "ben_type_question.633.2__id__" = (case when x6.response->''address''->''1''->''633''->>''2''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''2''::text)::integer else 0 end),
                                    "ben_type_question.633.3__id__" = (case when x6.response->''address''->''1''->''633''->>''3''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''3''::text)::integer else 0 end),
                                    "ben_type_question.633.4__id__" = (case when x6.response->''address''->''1''->''633''->>''4''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''4''::text)::integer else 0 end),
                                    "ben_type_question.633.5__id__" = (case when x6.response->''address''->''1''->''633''->>''5''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''5''::text)::integer else 0 end),
                                    "ben_type_question.633.6__id__" = (case when x6.response->''address''->''1''->''633''->>''6''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''6''::text)::integer else 0 end),
                                    "ben_type_question.633.7__id__" = (case when x6.response->''address''->''1''->''633''->>''7''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''7''::text)::integer else 0 end),
                                    "ben_type_question.633.8__id__" = (case when x6.response->''address''->''1''->''633''->>''8''::text ~ ''^[1-9][0-9]*$'' then (x6.response->''address''->''1''->''633''->>''8''::text)::integer else 0 end)
                                from %s as x1
                                inner join beneficiary_beneficiaryresponse x2 on x1."cluster.BeneficiaryResponse" = x2.creation_key
                                inner join beneficiary_beneficiarytype x3 on x2.beneficiary_type_id = x3.id
                                inner join survey_jsonanswer x4 on x2.json_answer_id = x4.id
                                left outer join beneficiary_beneficiaryresponse x5 on x4.response->>''640''::text ~ ''^[0-9]+$'' and (x4.response->>''640'')::integer = x5.id
                                left outer join survey_jsonanswer x6 on x5.json_answer_id = x6.id
                                left outer join survey_choice sc626 on x6.response->>''626''::text = sc626.id::text
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                                -- update people (qid 1278) address widgets
                                select format('select concat(''ben_type_question.1278.'',code) as q_id
                                        from masterdata_boundarylevel 
                                        order by code', param_survey_id) into lcl_sql_query;
                                for lcl_loop_row IN EXECUTE lcl_sql_query
                                LOOP 
                                    -- RAISE NOTICE '--------5--%',lcl_loop_row.q_id;
                                    EXECUTE format( 'update %s
                                        set "%s" = x2.name 
                                        from %s as x1
                                        inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                        where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                                end LOOP;  
                                -- update people - Household data (qid 640 of people - 633 of household) address widgets
                                select format('select concat(''ben_type_question.633.'',code) as q_id
                                        from masterdata_boundarylevel 
                                        order by code', param_survey_id) into lcl_sql_query;
                                for lcl_loop_row IN EXECUTE lcl_sql_query
                                LOOP 
                                    -- RAISE NOTICE '--------5a--%',lcl_loop_row.q_id;
                                    EXECUTE format( 'update %s
                                        set "%s" = x2.name 
                                        from %s as x1
                                        inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                        where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                                end LOOP;  
                            elsif param_in_type_qid = 0 and param_ben_type = 13 then
                                -- RAISE NOTICE '--------6';
                            -- beneficiary Institution - survey_id = 181
                                EXECUTE format( 'update %s
                                set "cluster.beneficiary_type_ref_name" = x3.name,
                                    "ben_type_question.944" = x4.response->>''944''::text,
                                    "ben_type_question.946" = x946.text,
                                    "ben_type_question.945" = x4.response->>''945''::text,
                                    "ben_type_question.1288.1" = x4.response->''address''->''1''->''1288''->>''1''::text,
                                    "ben_type_question.1288.2" = x4.response->''address''->''1''->''1288''->>''2''::text,
                                    "ben_type_question.1288.3" = x4.response->''address''->''1''->''1288''->>''3''::text,
                                    "ben_type_question.1288.4" = x4.response->''address''->''1''->''1288''->>''4''::text,
                                    "ben_type_question.1288.5" = x4.response->''address''->''1''->''1288''->>''5''::text,
                                    "ben_type_question.1288.6" = x4.response->''address''->''1''->''1288''->>''6''::text,
                                    "ben_type_question.1288.7" = x4.response->''address''->''1''->''1288''->>''7''::text,
                                    "ben_type_question.1288.8" = x4.response->''address''->''1''->''1288''->>''8''::text,
                                    "ben_type_question.1288.1__id__" = (case when x4.response->''address''->''1''->''1288''->>''1''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''1''::text)::integer else 0 end),
                                    "ben_type_question.1288.2__id__" = (case when x4.response->''address''->''1''->''1288''->>''2''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''2''::text)::integer else 0 end),
                                    "ben_type_question.1288.3__id__" = (case when x4.response->''address''->''1''->''1288''->>''3''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''3''::text)::integer else 0 end),
                                    "ben_type_question.1288.4__id__" = (case when x4.response->''address''->''1''->''1288''->>''4''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''4''::text)::integer else 0 end),
                                    "ben_type_question.1288.5__id__" = (case when x4.response->''address''->''1''->''1288''->>''5''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''5''::text)::integer else 0 end),
                                    "ben_type_question.1288.6__id__" = (case when x4.response->''address''->''1''->''1288''->>''6''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''6''::text)::integer else 0 end),
                                    "ben_type_question.1288.7__id__" = (case when x4.response->''address''->''1''->''1288''->>''7''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''7''::text)::integer else 0 end),
                                    "ben_type_question.1288.8__id__" = (case when x4.response->''address''->''1''->''1288''->>''8''::text ~ ''^[1-9][0-9]*$'' then (x4.response->''address''->''1''->''1288''->>''8''::text)::integer else 0 end)
                                from %s as x1
                                inner join beneficiary_beneficiaryresponse x2 on x1."cluster.BeneficiaryResponse" = x2.creation_key
                                inner join beneficiary_beneficiarytype x3 on x2.beneficiary_type_id = x3.id
                                inner join survey_jsonanswer x4 on x2.json_answer_id = x4.id
                                inner join survey_choice x946 on x946.id::text = x4.response->>''946''::text
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                                -- update institution block(qid 1288) address widgets
                                select format('select concat(''ben_type_question.1288.'',code) as q_id
                                        from masterdata_boundarylevel 
                                        order by code', param_survey_id) into lcl_sql_query;
                                for lcl_loop_row IN EXECUTE lcl_sql_query
                                LOOP 
                                    -- RAISE NOTICE '--------6--%',lcl_loop_row.q_id;
                                    EXECUTE format( 'update %s
                                        set "%s" = x2.name 
                                        from %s as x1
                                        inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                        where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                                end LOOP;  
                            elsif param_in_type_qid = 0 then
                                -- RAISE NOTICE '--------7';
                                EXECUTE format( 'update %s
                                    set "cluster.beneficiary_type_ref_name" = x3.name
                                    from %s as x1
                                    inner join beneficiary_beneficiaryresponse x2 on x1."cluster.BeneficiaryResponse" = x2.creation_key
                                    inner join beneficiary_beneficiarytype x3 on x2.beneficiary_type_id = x3.id
                                    where %s ', param_table_name, param_table_name, lcl_key_where);
                            end if;
                        end if;

                        -- update partner_details
                        -- only if the partners are managed in the program and if the data is for the main sheet
                        if param_partner_exists = true and param_in_type_qid = 0 then
                            -- RAISE NOTICE '--------8';
                            EXECUTE format( 'update %s
                                set "cluster.partner_id_ref_name" = x2.name
                                from %s as x1
                                inner join partner_partner x2 on x1."cluster.partner_id" = x2.id::text
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                        end if;

                        if param_in_type_qid = 0 and param_survey_type = 1 then
                            -- update project details
                            -- RAISE NOTICE '--------9';
                            EXECUTE format( 'update %s
                                set "cluster.project_id_ref_name" = x2.name
                                from %s as x1
                                inner join projectmanagement_project x2 on x1."cluster.project_id"::integer = x2.id
                                where %s and x1."cluster.project_id" is not null and x1."cluster.project_id" ~ ''^[0-9]+$'' ', param_table_name, param_table_name, lcl_key_where);

                            -- update cluster Boundary information - boundary level, state, region, district, cluster, block, gp, village, hamlet
                            -- RAISE NOTICE '--------10';
                            EXECUTE format( 'update %s
                                set "cluster.boundary_level" = x3.name
                                from %s as x1
                                inner join masterdata_boundary x2 on x1."cluster.Boundary"::integer = x2.id
                                inner join masterdata_boundarylevel x3 on x2.boundary_level_type_id = x3.id
                                where %s ', param_table_name, param_table_name, lcl_key_where);
                            EXECUTE format('select max(c.code) 
                                            from %s a 
                                            inner join masterdata_boundary b on a."cluster.Boundary"::integer = b.id 
                                            inner join masterdata_boundarylevel c on c.id = b.boundary_level_type_id', param_table_name) into lcl_max_boundary_level_code;
                            lcl_boundary_level_names := Array(select lower(name) as name 
                                            from masterdata_boundarylevel 
                                            where code <= lcl_max_boundary_level_code order by code desc);
                            -- RAISE NOTICE 'Array: %', lcl_boundary_level_names;
                            lcl_boundarylevel_count := array_length(lcl_boundary_level_names,1);
                            -- RAISE NOTICE 'Array: %', lcl_boundary_level_names;
                            if lcl_boundary_level_names is not null and lcl_boundarylevel_count > 0 then
                                -- when ben_type is 0 then the cluster boundary will be used as the filter and hence the __id__ fields will be included in the table
                                -- these fields have to be updated with the id value of the boundary hierarcy
                                if param_ben_type = 0 then
                                    lcl_set_boundary_id_str := ',"cluster.boundary_%s__id__" = x2.id,';
                                else 
                                    lcl_set_boundary_id_str := ',';
                                end if;
                                -- RAISE NOTICE '--------11--%',lcl_set_boundary_id_str;
                                FOR counter IN 1..lcl_boundarylevel_count LOOP
                                    if lcl_set_boundary_id_str != '' then
                                        lcl_loop_set_boundary_id_str := format(lcl_set_boundary_id_str, lcl_boundary_level_names[(counter)]);
                                    end if;
                                    -- RAISE NOTICE '--------11a--%',lcl_loop_set_boundary_id_str;
                                    if counter = 1 then
                                        EXECUTE format( 'update %s
                                            set "cluster.boundary_%s" = x2.name
                                                %s                    
                                                "cluster.boundary_%s" = x2.parent_id
                                            from %s as x1
                                            inner join masterdata_boundary x2 on x1."cluster.Boundary"::integer = x2.id
                                            where %s ', param_table_name, lcl_boundary_level_names[(counter)], lcl_loop_set_boundary_id_str, lcl_boundary_level_names[(counter+1)], param_table_name, lcl_key_where);
                                        -- RAISE NOTICE 'Q1: %s', format( 'update %s
                                        --     set "cluster.boundary_%s" = x2.name
                                        --         %s                    
                                        --         "cluster.boundary_%s" = x2.parent_id
                                        --     from %s as x1
                                        --     inner join masterdata_boundary x2 on x1."cluster.Boundary"::integer = x2.id
                                        --     where %s ', param_table_name, lcl_boundary_level_names[(counter)], lcl_loop_set_boundary_id_str, lcl_boundary_level_names[(counter+1)], param_table_name, lcl_key_where);
                                    elsif counter = lcl_boundarylevel_count then
                                        -- RAISE NOTICE '--------11b--%',left(lcl_loop_set_boundary_id_str,-1);
                                        EXECUTE format( 'update %s
                                            set "cluster.boundary_%s" = x2.name
                                            %s
                                            from %s as x1
                                            inner join masterdata_boundary x2 on x1."cluster.boundary_%s" = x2.id::text
                                            where %s ', param_table_name, lcl_boundary_level_names[(counter)], left(lcl_loop_set_boundary_id_str,-1), param_table_name, lcl_boundary_level_names[(counter)], lcl_key_where);
                                        -- RAISE NOTICE 'Q2: %s', format( 'update %s
                                        --     set "cluster.boundary_%s" = x2.name
                                        --     %s
                                        --     from %s as x1
                                        --     inner join masterdata_boundary x2 on x1."cluster.boundary_%s" = x2.id::text
                                        --     where %s ', param_table_name, lcl_boundary_level_names[(counter)], left(lcl_loop_set_boundary_id_str,-1), param_table_name, lcl_boundary_level_names[(counter)], lcl_key_where);
                                    else 
                                        EXECUTE format( 'update %s
                                            set "cluster.boundary_%s" = x2.name
                                                %s
                                                "cluster.boundary_%s" = x2.parent_id
                                            from %s as x1
                                            inner join masterdata_boundary x2 on x1."cluster.boundary_%s" = x2.id::text
                                            where %s ', param_table_name, lcl_boundary_level_names[(counter)], lcl_loop_set_boundary_id_str, lcl_boundary_level_names[(counter+1)], param_table_name,lcl_boundary_level_names[(counter)], lcl_key_where);
                                        -- RAISE NOTICE 'Q3: %s', format( 'update %s
                                        --     set "cluster.boundary_%s" = x2.name
                                        --         %s
                                        --         "cluster.boundary_%s" = x2.parent_id
                                        --     from %s as x1
                                        --     inner join masterdata_boundary x2 on x1."cluster.boundary_%s" = x2.id::text
                                        --     where %s ', param_table_name, lcl_boundary_level_names[(counter)], lcl_loop_set_boundary_id_str, lcl_boundary_level_names[(counter+1)], param_table_name,lcl_boundary_level_names[(counter)], lcl_key_where);
                                    end if;
                                END LOOP;
                            end if;
                        end if;

                        --- update address widgets
                            -- RAISE NOTICE '--------12';
                            select format('select concat(''response.address.1.'', a.id, ''.'',c.code) as q_id
                                    from survey_question a
                                    inner join survey_block b on a.block_id = b.id and b.survey_id = %s
                                    inner join masterdata_boundarylevel c on true
                                    where a.qtype = ''AW''
                                    and a.active != 0 
                                    order by c.code', param_survey_id) into lcl_sql_query;
                            --select format(' %s.id = x1.id ', param_table_name) into lcl_key_where;
                            --select format(' %s.sl_no = x1.sl_no ', param_table_name) into lcl_key_where;
                            -- Filter for people survey is based on the household address and not the people address question
                            if param_survey_id != 73 then
                                lcl_set_boundary_id_str := ',"%s__id__" = coalesce(x2.id,''0'')::int';
                            else 
                                lcl_set_boundary_id_str := '';
                            end if;
                            for lcl_loop_row IN EXECUTE lcl_sql_query
                            LOOP 
                                if lcl_set_boundary_id_str != '' then
                                    lcl_loop_set_boundary_id_str := format(lcl_set_boundary_id_str, lcl_loop_row.q_id);
                                end if;
                                -- RAISE NOTICE '--------12--%',lcl_loop_row.q_id;
                                EXECUTE format( 'update %s
                                set "%s" = x2.name
                                %s
                                from %s as x1
                                inner join masterdata_boundary x2 on x1."%s" = x2.id::text
                                where %s and x1."%s" is not null and x1."%s" != ''''', param_table_name, lcl_loop_row.q_id, lcl_loop_set_boundary_id_str, param_table_name, lcl_loop_row.q_id, lcl_key_where, lcl_loop_row.q_id, lcl_loop_row.q_id);
                            end LOOP;  
                        END;
                        $_$;"""),
]
