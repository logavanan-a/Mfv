# Generated by Django 3.2.4 on 2022-11-06 12:38

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('reports', '0006_auto_20221019_0657'),
    ]

    operations = [
        migrations.RunSQL("""drop materialized view if exists mat_partner_mission_meta_view;
                            create materialized view mat_partner_mission_meta_view as
                            select mi.id as indicator_id, mi.name as indicator_name, mi.listing_order as indicator_list_order, mi.category_id as category_id,
                            mi.indicator_type as indicator_type, mic.name as category_name, mic.listing_order as category_list_order, mic.category_type as category_type,
                            mic.mission_id as mission_id, mss.name as mission_name, mss.slug as mission_slug, mss.listing_order as mission_list_order,
                            mss.short_description as mission_short_desc, prj.id as project_id, 
                            prj.name as project_name, prj.start_date as project_start_date, prj.end_date as project_end_date, 
                            pmm.partner_id as partner_id, ptr.name as partner_name, ptr.slug as partner_slug, ptr.partner_logo as partner_logo,
                            pdm.donor_id as donor_id, dnr.name as donor_name, dnr.logo as donor_logo, prj.district_id, dst.name as district_name,
                            dst.state_id, sta.name as state_name
                            from application_master_project as prj
                            inner join application_master_partnermissionmapping as pmm on pmm.id = prj.partner_mission_mapping_id
                            inner join application_master_missionindicatorcategory as mic on mic.mission_id = pmm.mission_id
                            inner join application_master_mission as mss on mss.id = pmm.mission_id 
                            inner join application_master_partner as ptr on ptr.id = pmm.partner_id
                            inner join application_master_missionindicator as mi on mi.category_id = mic.id 
                            inner join application_master_district dst on dst.id = prj.district_id
                            inner join application_master_state sta on sta.id = dst.state_id
                            left outer join application_master_projectdonormapping as pdm on pdm.project_id = prj.id and pdm.active = 2 
                            left outer join application_master_donor as dnr on dnr.id = pdm.donor_id and dnr.active = 2
                            where mi.active = 2 and mic.active = 2 and pmm.active = 2 and mss.active = 2 and ptr.active = 2 
                            and prj.active = 2  
                            order by mss.name, mic.name, mi.name;
                            -- assumption : one project is mapped to only one donor
                            create index mat_partner_mission_meta_view_idx on mat_partner_mission_meta_view(project_id, indicator_id);

                            drop materialized view if exists mat_target_view;
                            create materialized view mat_target_view as 
                            select prj.id as project_id, prj.name as project_name, prj.start_date as project_start_date, prj.end_date as project_end_date,
                            mit.mission_indicator_id as mission_indicator_id, mit.target as target_value, mit.periodicity as periodicity_year, mit.approved_budget 
                            from application_master_project as prj
                            inner join application_master_missionindicatortarget as mit on prj.id = mit.project_id;
                            create index mat_target_view_idx on mat_target_view(project_id, mission_indicator_id,periodicity_year);

                            -- mis_task- task_status
                            -- STATUS_CHOICES = ((1, 'Pending'), (2, 'Submitted for Partner Admin'),(3, 'Submitted for Project In-charge'), (4, 'Approved'), (5,  'Rejected'))
                            drop materialized view if exists mat_dashboard_achievement_view;
                            create materialized view mat_dashboard_achievement_view as
                            select mt.project_id, to_char(mt.start_date,'YYYYMM')::integer as task_month, x.key, sum(x.value::integer) as value
                            from mis_missionindicatorachievement mia 
                            inner join jsonb_each_text(response::jsonb) as x on true  
                            inner join mis_task mt on mt.id = mia.task_id and task_status = 4 
                            where x.key ~ '^total_[0-9]*$' and x.key in ('total_33','total_296', 'total_40','total_346','total_301','total_46', 'total_292','total_304', 'total_40','total_39', 'total_121','total_221', 'total_122','total_222', 'total_223','total_224','total_225','total_229', 'total_230','total_232','total_231','total_16', 'total_132','total_1','total_2','total_284', 'total_112','total_273','total_264','total_274', 'total_265','total_113','total_281','total_272','total_263')
                            and mt.task_status = 4
                            group by mt.project_id, to_char(mt.start_date,'YYYYMM')::integer, x.key;
                            create index mat_dashboard_achievement_view_idx on mat_dashboard_achievement_view(project_id, task_month, key);

                            drop materialized view if exists mat_achievement_view;
                            create materialized view mat_achievement_view as
                            select mt.project_id, to_char(mt.start_date,'YYYYMM')::integer as task_month, regexp_replace(x.key, '^.*?_([0-9]+)$','\1') as indicator_id, 
                            jsonb_object_agg(regexp_replace(x.key, '^(.*?)_[0-9]+$','\1'),x.value) as response
                            from mis_missionindicatorachievement mia 
                            inner join jsonb_each_text(response::jsonb) as x on true  
                            inner join mis_task mt on mt.id = mia.task_id and mt.task_status = 4
                            where mt.task_status = 4
                            group by mt.project_id, to_char(mt.start_date,'YYYYMM')::integer, regexp_replace(x.key, '^.*?_([0-9]+)$','\1');
                            create index mat_achievement_view_idx on mat_achievement_view(project_id, task_month, indicator_id)""")
    ]
